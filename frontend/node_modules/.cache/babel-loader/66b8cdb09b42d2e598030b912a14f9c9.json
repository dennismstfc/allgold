{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\denni\\\\Documents\\\\GitHub\\\\allgold-website\\\\src\\\\components\\\\StationForm.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { Form, Input, Button } from 'semantic-ui-react';\nimport { Link } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst StationForm = ({\n  onNewStation\n}) => {\n  _s();\n\n  const [location, setLocation] = useState(\"\");\n  const [longitude, setLongitude] = useState(\"\");\n  const [latitude, setLatitude] = useState(\"\");\n  const [type, setType] = useState(\"\");\n  const [description, setDescription] = useState(\"\");\n  const options = [{\n    key: 'a',\n    text: 'Automat',\n    value: 'automat'\n  }, {\n    key: 'a+v',\n    text: 'Automat + Verkaufsstelle',\n    value: 'automat+verkaufsstelle'\n  }, {\n    key: 'v',\n    text: 'Verkaufsstelle',\n    value: 'verkaufsstelle'\n  }];\n  return /*#__PURE__*/_jsxDEV(Form, {\n    children: [/*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Standort\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 12\n    }, this), /*#__PURE__*/_jsxDEV(Form.Field, {\n      children: /*#__PURE__*/_jsxDEV(Input, {\n        placeholder: \"Standort\",\n        value: location,\n        onChange: e => setLocation(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 16\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 12\n    }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n      widths: \"equal\",\n      children: [/*#__PURE__*/_jsxDEV(Form.Field, {\n        children: /*#__PURE__*/_jsxDEV(Input, {\n          placeholder: \"Longitude\",\n          value: longitude,\n          onChange: e => setLongitude(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Form.Field, {\n        children: /*#__PURE__*/_jsxDEV(Input, {\n          placeholder: \"Latitude\",\n          value: latitude,\n          onChange: e => setLatitude(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(Form.Field, {\n        children: /*#__PURE__*/_jsxDEV(Input, {\n          placeholder: \"Typ\",\n          value: type,\n          onChange: e => setType(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 20\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 16\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 12\n    }, this), /*#__PURE__*/_jsxDEV(Form.TextArea, {\n      children: /*#__PURE__*/_jsxDEV(Input, {\n        placeholder: \"Beschreibung\",\n        value: description,\n        onChange: e => setDescription(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 16\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 11\n    }, this), /*#__PURE__*/_jsxDEV(Link, {\n      to: \"/verkaufsstellen-auflisten\",\n      children: /*#__PURE__*/_jsxDEV(Form.Field, {\n        children: /*#__PURE__*/_jsxDEV(Button, {\n          onClick: async () => {\n            const station = {\n              location,\n              longitude,\n              latitude,\n              type,\n              description\n            };\n            const response = await fetch(\"/add_station\", {\n              method: \"POST\",\n              headers: {\n                \"Content-Type\": \"application/json\"\n              },\n              body: JSON.stringify(station)\n            });\n\n            if (response.ok) {\n              console.log(\"respone worked!\");\n              onNewStation(station);\n              setLocation(\"\");\n            }\n          },\n          children: \"Submit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 20,\n    columnNumber: 8\n  }, this);\n};\n\n_s(StationForm, \"9oUknbuWZ/csLOFcJDGniQ/Gs2U=\");\n\n_c = StationForm;\nexport default StationForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"StationForm\");","map":{"version":3,"sources":["C:/Users/denni/Documents/GitHub/allgold-website/src/components/StationForm.js"],"names":["React","useState","Form","Input","Button","Link","StationForm","onNewStation","location","setLocation","longitude","setLongitude","latitude","setLatitude","type","setType","description","setDescription","options","key","text","value","e","target","station","response","fetch","method","headers","body","JSON","stringify","ok","console","log"],"mappings":"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","sourcesContent":["import React, {useState} from 'react';\r\nimport { Form, Input, Button } from 'semantic-ui-react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nconst StationForm = ({ onNewStation }) => {\r\n    const [location, setLocation] = useState(\"\");\r\n    const [longitude, setLongitude] = useState(\"\");\r\n    const [latitude, setLatitude] = useState(\"\");\r\n    const [type, setType] = useState(\"\");\r\n    const [description, setDescription] = useState(\"\");\r\n\r\n    const options = [\r\n        {key: 'a', text: 'Automat', value: 'automat' },\r\n        {key: 'a+v', text: 'Automat + Verkaufsstelle', value: 'automat+verkaufsstelle' },\r\n        {key: 'v', text: 'Verkaufsstelle', value: 'verkaufsstelle' },\r\n    ]\r\n\r\n\r\n    return ( \r\n       <Form>\r\n           <p>Standort</p>\r\n           <Form.Field>\r\n               <Input\r\n                placeholder=\"Standort\"\r\n                value={location}\r\n                onChange={e => setLocation(e.target.value)}\r\n                />\r\n           </Form.Field>\r\n           \r\n           <Form.Group widths='equal'>\r\n                <Form.Field>\r\n                    <Input\r\n                        placeholder=\"Longitude\"\r\n                        value={longitude}\r\n                        onChange={e => setLongitude(e.target.value)}\r\n                        />\r\n                </Form.Field>\r\n\r\n                    <Form.Field>\r\n                    <Input\r\n                        placeholder=\"Latitude\"\r\n                        value={latitude}\r\n                        onChange={e => setLatitude(e.target.value)}\r\n                        />\r\n                </Form.Field>\r\n                \r\n               <Form.Field>\r\n                   <Input\r\n                    placeholder=\"Typ\"\r\n                    value={type}\r\n                    onChange={e => setType(e.target.value)}\r\n                    />\r\n                </Form.Field>\r\n            </Form.Group>\r\n        \r\n       \r\n\r\n          <Form.TextArea>\r\n               <Input\r\n                placeholder=\"Beschreibung\"\r\n                value={description}\r\n                onChange={e => setDescription(e.target.value)}\r\n                />\r\n           </Form.TextArea>\r\n\r\n            <Link to='/verkaufsstellen-auflisten'>\r\n                <Form.Field>\r\n                    <Button\r\n                    onClick={async () => {\r\n                        const station = {location, longitude, latitude, type, description};\r\n                        const response = await fetch(\"/add_station\", {\r\n                            method: \"POST\",\r\n                            headers: {\r\n                                \"Content-Type\": \"application/json\"\r\n                            },\r\n                            body: JSON.stringify(station)\r\n                        });\r\n\r\n                        if (response.ok){\r\n                            console.log(\"respone worked!\");\r\n                            onNewStation(station);\r\n                            setLocation(\"\");\r\n                        }\r\n                    }}\r\n                    >Submit</Button>\r\n                </Form.Field>\r\n            </Link>\r\n       </Form> \r\n     );\r\n}\r\n \r\nexport default StationForm;"]},"metadata":{},"sourceType":"module"}