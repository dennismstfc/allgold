{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\denni\\\\Documents\\\\GitHub\\\\allgold-website\\\\src\\\\components\\\\StationForm.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { Form, Input, Button } from 'semantic-ui-react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst StationForm = ({\n  onNewStation\n}) => {\n  _s();\n\n  const [location, setLocation] = useState(\"\");\n  const [longitude, setLongitude] = useState(\"\");\n  const [latitude, setLatitude] = useState(\"\");\n  const [type, setType] = useState(\"\");\n  const [description, setDescription] = useState(\"\");\n  return /*#__PURE__*/_jsxDEV(Form, {\n    children: [/*#__PURE__*/_jsxDEV(Form.Field, {\n      children: /*#__PURE__*/_jsxDEV(Input, {\n        placeholder: \"Standort\",\n        value: location,\n        onChange: e => setLocation(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 14,\n        columnNumber: 16\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 12\n    }, this), /*#__PURE__*/_jsxDEV(Form.Field, {\n      children: /*#__PURE__*/_jsxDEV(Input, {\n        placeholder: \"Longitude\",\n        value: longitude,\n        onChange: e => setLongitude(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 16\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 12\n    }, this), /*#__PURE__*/_jsxDEV(Form.Field, {\n      children: /*#__PURE__*/_jsxDEV(Input, {\n        placeholder: \"Latitude\",\n        value: latitude,\n        onChange: e => setLatitude(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 16\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Form.Field, {\n      children: /*#__PURE__*/_jsxDEV(Input, {\n        placeholder: \"Typ\",\n        value: type,\n        onChange: e => setType(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 16\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 11\n    }, this), /*#__PURE__*/_jsxDEV(Form.Field, {\n      children: /*#__PURE__*/_jsxDEV(Input, {\n        placeholder: \"Beschreibung\",\n        value: description,\n        onChange: e => setDescription(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 16\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 11\n    }, this), /*#__PURE__*/_jsxDEV(Form.Field, {\n      children: /*#__PURE__*/_jsxDEV(Button, {\n        onClick: async () => {\n          const station = {\n            location,\n            longitude,\n            latitude,\n            type,\n            description\n          };\n          const response = await fetch(\"/add_station\", {\n            method: \"POST\",\n            headers: {\n              \"Content-Type\": \"application/json\"\n            },\n            body: JSON.stringify(station)\n          });\n\n          if (response.ok) {\n            console.log(\"respone worked!\");\n            onNewStation(station);\n            setLocation(\"\");\n          }\n        },\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 16\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 12\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 12,\n    columnNumber: 8\n  }, this);\n};\n\n_s(StationForm, \"9oUknbuWZ/csLOFcJDGniQ/Gs2U=\");\n\n_c = StationForm;\nexport default StationForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"StationForm\");","map":{"version":3,"sources":["C:/Users/denni/Documents/GitHub/allgold-website/src/components/StationForm.js"],"names":["React","useState","Form","Input","Button","StationForm","onNewStation","location","setLocation","longitude","setLongitude","latitude","setLatitude","type","setType","description","setDescription","e","target","value","station","response","fetch","method","headers","body","JSON","stringify","ok","console","log"],"mappings":"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","sourcesContent":["import React, {useState} from 'react';\r\nimport { Form, Input, Button } from 'semantic-ui-react';\r\n\r\nconst StationForm = ({ onNewStation }) => {\r\n    const [location, setLocation] = useState(\"\");\r\n    const [longitude, setLongitude] = useState(\"\");\r\n    const [latitude, setLatitude] = useState(\"\");\r\n    const [type, setType] = useState(\"\");\r\n    const [description, setDescription] = useState(\"\");\r\n\r\n    return ( \r\n       <Form>\r\n           <Form.Field>\r\n               <Input\r\n                placeholder=\"Standort\"\r\n                value={location}\r\n                onChange={e => setLocation(e.target.value)}\r\n                />\r\n           </Form.Field>\r\n           \r\n           <Form.Field>\r\n               <Input\r\n                placeholder=\"Longitude\"\r\n                value={longitude}\r\n                onChange={e => setLongitude(e.target.value)}\r\n                />\r\n           </Form.Field>\r\n\r\n            <Form.Field>\r\n               <Input\r\n                placeholder=\"Latitude\"\r\n                value={latitude}\r\n                onChange={e => setLatitude(e.target.value)}\r\n                />\r\n           </Form.Field>\r\n\r\n          <Form.Field>\r\n               <Input\r\n                placeholder=\"Typ\"\r\n                value={type}\r\n                onChange={e => setType(e.target.value)}\r\n                />\r\n           </Form.Field>\r\n\r\n          <Form.Field>\r\n               <Input\r\n                placeholder=\"Beschreibung\"\r\n                value={description}\r\n                onChange={e => setDescription(e.target.value)}\r\n                />\r\n           </Form.Field>\r\n\r\n\r\n           <Form.Field>\r\n               <Button\r\n               onClick={async () => {\r\n                   const station = {location, longitude, latitude, type, description};\r\n                   const response = await fetch(\"/add_station\", {\r\n                       method: \"POST\",\r\n                       headers: {\r\n                           \"Content-Type\": \"application/json\"\r\n                       },\r\n                       body: JSON.stringify(station)\r\n                   });\r\n\r\n                   if (response.ok){\r\n                       console.log(\"respone worked!\");\r\n                       onNewStation(station);\r\n                       setLocation(\"\");\r\n                   }\r\n               }}\r\n               >Submit</Button>\r\n           </Form.Field>\r\n       </Form> \r\n     );\r\n}\r\n \r\nexport default StationForm;"]},"metadata":{},"sourceType":"module"}