{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\denni\\\\Documents\\\\GitHub\\\\allgold-website\\\\src\\\\components\\\\StationForm.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { Form, Button } from 'semantic-ui-react';\nimport { Link } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst StationForm = ({\n  onNewStation\n}) => {\n  _s();\n\n  const [location, setLocation] = useState(\"\");\n  const [longitude, setLongitude] = useState(\"\");\n  const [latitude, setLatitude] = useState(\"\");\n  const [type, setType] = useState(\"\");\n  const [description, setDescription] = useState(\"\");\n  return /*#__PURE__*/_jsxDEV(Form, {\n    children: [/*#__PURE__*/_jsxDEV(Form.Field, {\n      children: /*#__PURE__*/_jsxDEV(Form.Input, {\n        fluid: true,\n        label: \"Standort\",\n        placeholder: \"Standort\",\n        value: location,\n        onChange: e => setLocation(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 15,\n        columnNumber: 16\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 12\n    }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n      widths: \"equal\",\n      children: [/*#__PURE__*/_jsxDEV(Form.Input, {\n        fluid: true,\n        label: \"Longitude\",\n        placeholder: \"Longitude\",\n        value: longitude,\n        onChange: e => setLongitude(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Form.Input, {\n        fluid: true,\n        label: \"Latitude\",\n        placeholder: \"Latitude\",\n        value: latitude,\n        onChange: e => setLatitude(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Form.Input, {\n        fluid: true,\n        label: \"Typ\",\n        placeholder: \"Typ\",\n        value: type,\n        onChange: e => setType(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 16\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 12\n    }, this), /*#__PURE__*/_jsxDEV(Form.TextArea, {\n      fluid: true,\n      label: \"Beschreibung\",\n      placeholder: \"Beschreibung\",\n      value: description,\n      onChange: e => setDescription(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 16\n    }, this), /*#__PURE__*/_jsxDEV(Link, {\n      to: \"/verkaufsstellen-auflisten\",\n      children: /*#__PURE__*/_jsxDEV(Form.Field, {\n        children: /*#__PURE__*/_jsxDEV(Button, {\n          onClick: async () => {\n            const station = {\n              location,\n              longitude,\n              latitude,\n              type,\n              description\n            };\n            const response = await fetch(\"/add_station\", {\n              method: \"POST\",\n              headers: {\n                \"Content-Type\": \"application/json\"\n              },\n              body: JSON.stringify(station)\n            });\n\n            if (response.ok) {\n              console.log(\"response worked!\");\n              onNewStation(station);\n              setLocation(\"\");\n              setLongitude(\"\");\n              setType(\"\");\n              setLatitude(\"\");\n              setDescription(\"\");\n            }\n          },\n          children: \"Submit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 13,\n    columnNumber: 8\n  }, this);\n};\n\n_s(StationForm, \"9oUknbuWZ/csLOFcJDGniQ/Gs2U=\");\n\n_c = StationForm;\nexport default StationForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"StationForm\");","map":{"version":3,"sources":["C:/Users/denni/Documents/GitHub/allgold-website/src/components/StationForm.js"],"names":["React","useState","Form","Button","Link","StationForm","onNewStation","location","setLocation","longitude","setLongitude","latitude","setLatitude","type","setType","description","setDescription","e","target","value","station","response","fetch","method","headers","body","JSON","stringify","ok","console","log"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,QAAf,QAA8B,OAA9B;AACA,SAASC,IAAT,EAAeC,MAAf,QAA6B,mBAA7B;AACA,SAASC,IAAT,QAAqB,kBAArB;;;AAEA,MAAMC,WAAW,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAsB;AAAA;;AACtC,QAAM,CAACC,QAAD,EAAWC,WAAX,IAA0BP,QAAQ,CAAC,EAAD,CAAxC;AACA,QAAM,CAACQ,SAAD,EAAYC,YAAZ,IAA4BT,QAAQ,CAAC,EAAD,CAA1C;AACA,QAAM,CAACU,QAAD,EAAWC,WAAX,IAA0BX,QAAQ,CAAC,EAAD,CAAxC;AACA,QAAM,CAACY,IAAD,EAAOC,OAAP,IAAkBb,QAAQ,CAAC,EAAD,CAAhC;AACA,QAAM,CAACc,WAAD,EAAcC,cAAd,IAAgCf,QAAQ,CAAC,EAAD,CAA9C;AAEA,sBACG,QAAC,IAAD;AAAA,4BACI,QAAC,IAAD,CAAM,KAAN;AAAA,6BACI,QAAC,IAAD,CAAM,KAAN;AACC,QAAA,KAAK,MADN;AAEC,QAAA,KAAK,EAAC,UAFP;AAGC,QAAA,WAAW,EAAC,UAHb;AAIC,QAAA,KAAK,EAAEM,QAJR;AAKC,QAAA,QAAQ,EAAEU,CAAC,IAAIT,WAAW,CAACS,CAAC,CAACC,MAAF,CAASC,KAAV;AAL3B;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,YADJ,eAWI,QAAC,IAAD,CAAM,KAAN;AAAY,MAAA,MAAM,EAAC,OAAnB;AAAA,8BACK,QAAC,IAAD,CAAM,KAAN;AACI,QAAA,KAAK,MADT;AAEI,QAAA,KAAK,EAAC,WAFV;AAGI,QAAA,WAAW,EAAC,WAHhB;AAII,QAAA,KAAK,EAAEV,SAJX;AAKI,QAAA,QAAQ,EAAEQ,CAAC,IAAIP,YAAY,CAACO,CAAC,CAACC,MAAF,CAASC,KAAV;AAL/B;AAAA;AAAA;AAAA;AAAA,cADL,eASK,QAAC,IAAD,CAAM,KAAN;AACI,QAAA,KAAK,MADT;AAEI,QAAA,KAAK,EAAC,UAFV;AAGI,QAAA,WAAW,EAAC,UAHhB;AAII,QAAA,KAAK,EAAER,QAJX;AAKI,QAAA,QAAQ,EAAEM,CAAC,IAAIL,WAAW,CAACK,CAAC,CAACC,MAAF,CAASC,KAAV;AAL9B;AAAA;AAAA;AAAA;AAAA,cATL,eAiBI,QAAC,IAAD,CAAM,KAAN;AACK,QAAA,KAAK,MADV;AAEK,QAAA,KAAK,EAAC,KAFX;AAGK,QAAA,WAAW,EAAC,KAHjB;AAIK,QAAA,KAAK,EAAEN,IAJZ;AAKK,QAAA,QAAQ,EAAEI,CAAC,IAAIH,OAAO,CAACG,CAAC,CAACC,MAAF,CAASC,KAAV;AAL3B;AAAA;AAAA;AAAA;AAAA,cAjBJ;AAAA;AAAA;AAAA;AAAA;AAAA,YAXJ,eAqCQ,QAAC,IAAD,CAAM,QAAN;AACC,MAAA,KAAK,MADN;AAEC,MAAA,KAAK,EAAC,cAFP;AAGC,MAAA,WAAW,EAAC,cAHb;AAIC,MAAA,KAAK,EAAEJ,WAJR;AAKC,MAAA,QAAQ,EAAEE,CAAC,IAAID,cAAc,CAACC,CAAC,CAACC,MAAF,CAASC,KAAV;AAL9B;AAAA;AAAA;AAAA;AAAA,YArCR,eA6CK,QAAC,IAAD;AAAM,MAAA,EAAE,EAAC,4BAAT;AAAA,6BACI,QAAC,IAAD,CAAM,KAAN;AAAA,+BACI,QAAC,MAAD;AACA,UAAA,OAAO,EAAE,YAAY;AACjB,kBAAMC,OAAO,GAAG;AAACb,cAAAA,QAAD;AAAWE,cAAAA,SAAX;AAAsBE,cAAAA,QAAtB;AAAgCE,cAAAA,IAAhC;AAAsCE,cAAAA;AAAtC,aAAhB;AACA,kBAAMM,QAAQ,GAAG,MAAMC,KAAK,CAAC,cAAD,EAAiB;AACzCC,cAAAA,MAAM,EAAE,MADiC;AAEzCC,cAAAA,OAAO,EAAE;AACL,gCAAgB;AADX,eAFgC;AAKzCC,cAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAeP,OAAf;AALmC,aAAjB,CAA5B;;AAQA,gBAAIC,QAAQ,CAACO,EAAb,EAAgB;AACZC,cAAAA,OAAO,CAACC,GAAR,CAAY,kBAAZ;AACAxB,cAAAA,YAAY,CAACc,OAAD,CAAZ;AACAZ,cAAAA,WAAW,CAAC,EAAD,CAAX;AACAE,cAAAA,YAAY,CAAC,EAAD,CAAZ;AACAI,cAAAA,OAAO,CAAC,EAAD,CAAP;AACAF,cAAAA,WAAW,CAAC,EAAD,CAAX;AACAI,cAAAA,cAAc,CAAC,EAAD,CAAd;AACH;AACJ,WApBD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,YA7CL;AAAA;AAAA;AAAA;AAAA;AAAA,UADH;AA0EH,CAjFD;;GAAMX,W;;KAAAA,W;AAmFN,eAAeA,WAAf","sourcesContent":["import React, {useState} from 'react';\r\nimport { Form, Button } from 'semantic-ui-react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nconst StationForm = ({ onNewStation }) => {\r\n    const [location, setLocation] = useState(\"\");\r\n    const [longitude, setLongitude] = useState(\"\");\r\n    const [latitude, setLatitude] = useState(\"\");\r\n    const [type, setType] = useState(\"\");\r\n    const [description, setDescription] = useState(\"\");\r\n\r\n    return ( \r\n       <Form>\r\n           <Form.Field>\r\n               <Form.Input\r\n                fluid\r\n                label='Standort'\r\n                placeholder=\"Standort\"\r\n                value={location}\r\n                onChange={e => setLocation(e.target.value)}\r\n                />\r\n           </Form.Field>\r\n           \r\n           <Form.Group widths='equal'>\r\n                <Form.Input\r\n                    fluid\r\n                    label='Longitude'\r\n                    placeholder=\"Longitude\"\r\n                    value={longitude}\r\n                    onChange={e => setLongitude(e.target.value)}\r\n                />\r\n                \r\n                <Form.Input\r\n                    fluid\r\n                    label='Latitude'\r\n                    placeholder=\"Latitude\"\r\n                    value={latitude}\r\n                    onChange={e => setLatitude(e.target.value)}\r\n                />\r\n                \r\n               <Form.Input\r\n                    fluid\r\n                    label='Typ'\r\n                    placeholder='Typ'\r\n                    value={type}\r\n                    onChange={e => setType(e.target.value)}\r\n               />\r\n            </Form.Group>\r\n        \r\n               <Form.TextArea\r\n                fluid\r\n                label='Beschreibung'\r\n                placeholder=\"Beschreibung\"\r\n                value={description}\r\n                onChange={e => setDescription(e.target.value)}\r\n                />\r\n\r\n            <Link to='/verkaufsstellen-auflisten'>\r\n                <Form.Field>\r\n                    <Button\r\n                    onClick={async () => {\r\n                        const station = {location, longitude, latitude, type, description};\r\n                        const response = await fetch(\"/add_station\", {\r\n                            method: \"POST\",\r\n                            headers: {\r\n                                \"Content-Type\": \"application/json\"\r\n                            },\r\n                            body: JSON.stringify(station)\r\n                        });\r\n\r\n                        if (response.ok){\r\n                            console.log(\"response worked!\");\r\n                            onNewStation(station);\r\n                            setLocation(\"\");\r\n                            setLongitude(\"\");\r\n                            setType(\"\");\r\n                            setLatitude(\"\");\r\n                            setDescription(\"\");\r\n                        }\r\n                    }}\r\n                    >Submit</Button>\r\n                </Form.Field>\r\n            </Link>\r\n       </Form> \r\n     );\r\n}\r\n \r\nexport default StationForm;"]},"metadata":{},"sourceType":"module"}