{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\denni\\\\Documents\\\\GitHub\\\\allgold-website\\\\frontend\\\\src\\\\components\\\\Statistics\\\\TopStationsDoughnut.js\",\n    _s = $RefreshSig$();\n\nimport { useEffect, useState } from 'react';\nimport { Bar } from 'react-chartjs-2';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst TopStationsDoughnut = () => {\n  _s();\n\n  const [chartData, setChartData] = useState({});\n  const [sellerName, setSellerName] = useState([]);\n  const [sellerAmount, setSellerAmount] = useState([]);\n\n  const chart = () => {\n    let selName = [];\n    let selAmount = [];\n    fetch(\"/sellers/top_sellers\").then(response => {\n      console.log(response.data.data);\n\n      for (const dataObj of response.data) {\n        selName.push(dataObj.name);\n        selAmount.push(dataObj.amount);\n      }\n    });\n    setChartData({\n      labels: selName,\n      datasets: [{\n        label: 'Top 5 sellers',\n        data: selAmount,\n        backgroundColor: ['rgb(255, 99, 132)', 'rgb(54, 162, 235)', 'rgb(255, 205, 86)'],\n        hoverOffset: 4\n      }]\n    });\n  };\n\n  useEffect(() => {\n    chart();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(Bar, {\n      data: chartData\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 4\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 46,\n    columnNumber: 3\n  }, this);\n};\n\n_s(TopStationsDoughnut, \"kYEEe/D4wKjSIHjgO9bLfLbztW0=\");\n\n_c = TopStationsDoughnut;\nexport default TopStationsDoughnut;\n\nvar _c;\n\n$RefreshReg$(_c, \"TopStationsDoughnut\");","map":{"version":3,"sources":["C:/Users/denni/Documents/GitHub/allgold-website/frontend/src/components/Statistics/TopStationsDoughnut.js"],"names":["useEffect","useState","Bar","TopStationsDoughnut","chartData","setChartData","sellerName","setSellerName","sellerAmount","setSellerAmount","chart","selName","selAmount","fetch","then","response","console","log","data","dataObj","push","name","amount","labels","datasets","label","backgroundColor","hoverOffset"],"mappings":";;;AAAA,SAASA,SAAT,EAAoBC,QAApB,QAAoC,OAApC;AACA,SAAQC,GAAR,QAAkB,iBAAlB;;;AAEA,MAAMC,mBAAmB,GAAG,MAAM;AAAA;;AAEjC,QAAM,CAACC,SAAD,EAAYC,YAAZ,IAA4BJ,QAAQ,CAAC,EAAD,CAA1C;AACA,QAAM,CAACK,UAAD,EAAaC,aAAb,IAA8BN,QAAQ,CAAC,EAAD,CAA5C;AACA,QAAM,CAACO,YAAD,EAAeC,eAAf,IAAkCR,QAAQ,CAAC,EAAD,CAAhD;;AAGA,QAAMS,KAAK,GAAG,MAAM;AAEnB,QAAIC,OAAO,GAAG,EAAd;AACA,QAAIC,SAAS,GAAG,EAAhB;AAEAC,IAAAA,KAAK,CAAC,sBAAD,CAAL,CAA8BC,IAA9B,CAAmCC,QAAQ,IAAI;AAC9CC,MAAAA,OAAO,CAACC,GAAR,CAAYF,QAAQ,CAACG,IAAT,CAAcA,IAA1B;;AACA,WAAK,MAAMC,OAAX,IAAsBJ,QAAQ,CAACG,IAA/B,EAAoC;AACnCP,QAAAA,OAAO,CAACS,IAAR,CAAaD,OAAO,CAACE,IAArB;AACAT,QAAAA,SAAS,CAACQ,IAAV,CAAeD,OAAO,CAACG,MAAvB;AACA;AACD,KAND;AAQAjB,IAAAA,YAAY,CAAE;AACbkB,MAAAA,MAAM,EAAEZ,OADK;AAEba,MAAAA,QAAQ,EAAE,CACT;AACCC,QAAAA,KAAK,EAAE,eADR;AAECP,QAAAA,IAAI,EAAEN,SAFP;AAGCc,QAAAA,eAAe,EAAE,CAChB,mBADgB,EAEhB,mBAFgB,EAGhB,mBAHgB,CAHlB;AAQCC,QAAAA,WAAW,EAAE;AARd,OADS;AAFG,KAAF,CAAZ;AAeA,GA5BD;;AA8BA3B,EAAAA,SAAS,CAAC,MAAM;AACfU,IAAAA,KAAK;AACL,GAFQ,EAEN,EAFM,CAAT;AAIA,sBACC;AAAA,2BACC,QAAC,GAAD;AAAK,MAAA,IAAI,EAAEN;AAAX;AAAA;AAAA;AAAA;AAAA;AADD;AAAA;AAAA;AAAA;AAAA,UADD;AAKA,CA9CD;;GAAMD,mB;;KAAAA,mB;AAgDN,eAAeA,mBAAf","sourcesContent":["import { useEffect, useState } from 'react';\r\nimport {Bar} from 'react-chartjs-2';\r\n\r\nconst TopStationsDoughnut = () => {\r\n\r\n\tconst [chartData, setChartData] = useState({});\r\n\tconst [sellerName, setSellerName] = useState([]);\r\n\tconst [sellerAmount, setSellerAmount] = useState([]);\r\n\r\n\r\n\tconst chart = () => {\t\r\n\t\t\r\n\t\tlet selName = [];\r\n\t\tlet selAmount = []; \r\n\r\n\t\tfetch(\"/sellers/top_sellers\").then(response => {\r\n\t\t\tconsole.log(response.data.data)\r\n\t\t\tfor (const dataObj of response.data){\r\n\t\t\t\tselName.push(dataObj.name);\r\n\t\t\t\tselAmount.push(dataObj.amount);\r\n\t\t\t}\r\n\t\t});\r\n\t\t\t\r\n\t\tsetChartData ({\r\n\t\t\tlabels: selName ,\r\n\t\t\tdatasets: [\r\n\t\t\t\t{ \r\n\t\t\t\t\tlabel: 'Top 5 sellers',\r\n\t\t\t\t\tdata: selAmount,\r\n\t\t\t\t\tbackgroundColor: [\r\n\t\t\t\t\t\t'rgb(255, 99, 132)',\r\n\t\t\t\t\t\t'rgb(54, 162, 235)',\r\n\t\t\t\t\t\t'rgb(255, 205, 86)'\r\n\t\t\t\t\t],\r\n\t\t\t\t\thoverOffset: 4\r\n\t\t\t\t}\r\n\t\t\t]\r\n\t\t\t})\r\n\t}\r\n\r\n\tuseEffect(() => {\r\n\t\tchart();\r\n\t}, []);\r\n\r\n\treturn ( \r\n\t\t<div>\r\n\t\t\t<Bar data={chartData}/>\r\n\t\t</div>\r\n\t );\r\n}\r\n \r\nexport default TopStationsDoughnut;"]},"metadata":{},"sourceType":"module"}