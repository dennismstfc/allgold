{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\denni\\\\Documents\\\\GitHub\\\\allgold-website\\\\frontend\\\\src\\\\components\\\\Statistics\\\\TopStationsDoughnut.js\",\n    _s = $RefreshSig$();\n\nimport { useEffect, useState } from 'react';\nimport { Bar } from 'react-chartjs-2';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst TopStationsDoughnut = () => {\n  _s();\n\n  const [sellers, setSellers] = useState([]);\n  useEffect(() => {\n    fetch(\"/sellers/top_sellers\").then(response => response.json().then(data => {\n      setSellers(data.sellers);\n    }));\n  }, []);\n  console.log(sellers[0].name);\n  const [chartData, setChartData] = useState({});\n\n  const chart = () => {\n    setChartData({\n      labels: [sellers[0].name],\n      datasets: [{\n        label: 'level of thiccness',\n        data: [23, 12, 4, 54, 11],\n        backgroundColor: ['rgb(75, 192, 192, 0.6)'],\n        borderWidth: 4\n      }]\n    });\n  };\n\n  useEffect(() => {\n    chart();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(Bar, {\n      data: chartData\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 4\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 43,\n    columnNumber: 3\n  }, this);\n};\n\n_s(TopStationsDoughnut, \"OnYlsMF09c4UVqa1iEHXqvvUb7Q=\");\n\n_c = TopStationsDoughnut;\nexport default TopStationsDoughnut;\n\nvar _c;\n\n$RefreshReg$(_c, \"TopStationsDoughnut\");","map":{"version":3,"sources":["C:/Users/denni/Documents/GitHub/allgold-website/frontend/src/components/Statistics/TopStationsDoughnut.js"],"names":["useEffect","useState","Bar","TopStationsDoughnut","sellers","setSellers","fetch","then","response","json","data","console","log","name","chartData","setChartData","chart","labels","datasets","label","backgroundColor","borderWidth"],"mappings":";;;AAAA,SAASA,SAAT,EAAoBC,QAApB,QAAoC,OAApC;AACA,SAAQC,GAAR,QAAkB,iBAAlB;;;AAEA,MAAMC,mBAAmB,GAAG,MAAM;AAAA;;AAEjC,QAAM,CAACC,OAAD,EAAUC,UAAV,IAAwBJ,QAAQ,CAAC,EAAD,CAAtC;AAEAD,EAAAA,SAAS,CAAC,MAAM;AACfM,IAAAA,KAAK,CAAC,sBAAD,CAAL,CAA8BC,IAA9B,CAAmCC,QAAQ,IAC1CA,QAAQ,CAACC,IAAT,GAAgBF,IAAhB,CAAqBG,IAAI,IAAI;AAC5BL,MAAAA,UAAU,CAACK,IAAI,CAACN,OAAN,CAAV;AAEA,KAHD,CADD;AAKA,GANQ,EAMN,EANM,CAAT;AAQAO,EAAAA,OAAO,CAACC,GAAR,CAAYR,OAAO,CAAC,CAAD,CAAP,CAAWS,IAAvB;AAEA,QAAM,CAACC,SAAD,EAAYC,YAAZ,IAA4Bd,QAAQ,CAAC,EAAD,CAA1C;;AAEA,QAAMe,KAAK,GAAG,MAAM;AACnBD,IAAAA,YAAY,CAAE;AACbE,MAAAA,MAAM,EAAE,CACPb,OAAO,CAAC,CAAD,CAAP,CAAWS,IADJ,CADK;AAIbK,MAAAA,QAAQ,EAAE,CACT;AACCC,QAAAA,KAAK,EAAE,oBADR;AAECT,QAAAA,IAAI,EAAE,CAAE,EAAF,EAAM,EAAN,EAAU,CAAV,EAAa,EAAb,EAAiB,EAAjB,CAFP;AAGCU,QAAAA,eAAe,EAAE,CAChB,wBADgB,CAHlB;AAMCC,QAAAA,WAAW,EAAE;AANd,OADS;AAJG,KAAF,CAAZ;AAeA,GAhBD;;AAkBArB,EAAAA,SAAS,CAAC,MAAM;AACfgB,IAAAA,KAAK;AACL,GAFQ,EAEN,EAFM,CAAT;AAIA,sBACC;AAAA,2BACC,QAAC,GAAD;AAAK,MAAA,IAAI,EAAEF;AAAX;AAAA;AAAA;AAAA;AAAA;AADD;AAAA;AAAA;AAAA;AAAA,UADD;AAKA,CA3CD;;GAAMX,mB;;KAAAA,mB;AA6CN,eAAeA,mBAAf","sourcesContent":["import { useEffect, useState } from 'react';\r\nimport {Bar} from 'react-chartjs-2';\r\n\r\nconst TopStationsDoughnut = () => {\r\n\r\n\tconst [sellers, setSellers] = useState([]);\r\n\r\n\tuseEffect(() => {\r\n\t\tfetch(\"/sellers/top_sellers\").then(response =>\r\n\t\t\tresponse.json().then(data => {\r\n\t\t\t\tsetSellers(data.sellers)\r\n\r\n\t\t\t}));\r\n\t}, []);\r\n\r\n\tconsole.log(sellers[0].name)\r\n\r\n\tconst [chartData, setChartData] = useState({});\r\n\r\n\tconst chart = () => {\r\n\t\tsetChartData ({\r\n\t\t\tlabels: [\r\n\t\t\t\tsellers[0].name\r\n\t\t\t],\r\n\t\t\tdatasets: [\r\n\t\t\t\t{ \r\n\t\t\t\t\tlabel: 'level of thiccness',\r\n\t\t\t\t\tdata: [ 23, 12, 4, 54, 11 ],\r\n\t\t\t\t\tbackgroundColor: [\r\n\t\t\t\t\t\t'rgb(75, 192, 192, 0.6)'\r\n\t\t\t\t\t],\r\n\t\t\t\t\tborderWidth: 4\r\n\t\t\t\t}\r\n\t\t\t]\r\n\t\t})\r\n\t}\r\n\r\n\tuseEffect(() => {\r\n\t\tchart()\r\n\t}, [])\r\n\r\n\treturn ( \r\n\t\t<div>\r\n\t\t\t<Bar data={chartData}/>\r\n\t\t</div>\r\n\t );\r\n}\r\n \r\nexport default TopStationsDoughnut;"]},"metadata":{},"sourceType":"module"}